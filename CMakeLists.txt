CMAKE_MINIMUM_REQUIRED(VERSION 3.3)
INCLUDE("../config/nrf52.cmake")
PROJECT(bootloader C ASM)
enable_language(ASM)
enable_language(C)

ADD_DEFINITIONS( 
	-DBOARD_CUSTOM
	-DCONFIG_GPIO_AS_PINRESET
	-DBLE_STACK_SUPPORT_REQD
	-DFLOAT_ABI_HARD
	-DNRF52
	-DNRF52832_XXAA
	-DNRF52_PAN_74
	-DNRF_SD_BLE_API_VERSION=6
	-DS132
	-DSOFTDEVICE_PRESENT
	-DSWI_DISABLE0
	-DNRF_DFU_SETTINGS_VERSION=1
	-DNRF_DFU_SVCI_ENABLED
	-DSVC_INTERFACE_CALL_AS_NORMAL_FUNCTION
	-DuECC_ENABLE_VLI_API=0
	-DuECC_OPTIMIZATION_LEVEL=3
	-DuECC_SQUARE_FUNC=0
	-DuECC_SUPPORT_COMPRESSED_POINT=0
	-DuECC_VLI_NATIVE_LITTLE_ENDIAN=1
	-DNRF_CRYPTO_MAX_INSTANCE_COUNT=1
	-DMBEDTLS_CONFIG_FILE=\"nrf_crypto_mbedtls_config.h\"
	-DNRF_CRYPTO_HASH_ENABLED=1
	-D__HEAP_SIZE=8192
	-D__STACK_SIZE=8192
	)

INCLUDE("../config/SDK.cmake")

SET(SOURCE_FILES
	main.c
	../config/public_key.c
	)

SET(COMPILE_DEFINITIONS_DEBUG -O0 -g3 -DDEBUG)
SET(COMPILE_DEFINITIONS_RELEASE -Os)

INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_SOURCE_DIR}/.
	${SDK_INCLUDE_DIRS}
	${SDK_LIB_INCLUDE_DIRS}
	${SDK_BLE_INCLUDE_DIRS}
	${SDK_BOOT_INCLUDE_DIRS}
	${SDK_CRYPTO_INCLUDE_DIRS}
	./
	../config
	)

ADD_EXECUTABLE(${CMAKE_PROJECT_NAME}.elf
	${NRF52_STARTUP}
	${SDK_MOD_DRV_SOURCES}
	${SOURCE_FILES}
	${SDK_LIB_SOURCES}
	${SDK_BLE_SOURCES}
	${SDK_BOOT_SOURCES}
	${NRF52_SYSTEM}
	${SDK_EXT_FPRINTF_SOURCES}
	${SDK_LOG_SOURCES}
	${SDK_CRYPTO_SOURCES}
	)

ADD_LIBRARY(oberon STATIC IMPORTED)
set_target_properties( oberon PROPERTIES IMPORTED_LOCATION ${SDK_DIR}/external/nrf_oberon/lib/cortex-m4/hard-float/liboberon_2.0.7.a )
TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME}.elf 
	m
	c
	nosys
	oberon
	)

# Convert elf to hex & bin
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf 
	POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Oihex ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.hex
	)
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf
	POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Obinary ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.bin
	)

# adds target for erasing and flashing the board
ADD_CUSTOM_TARGET(flashsd
	COMMAND ${NRFJPROG} -f ${TARGET_PLATFORM} --eraseall
    COMMAND ${NRFJPROG} -f ${TARGET_PLATFORM} --program ${SOFTDEVICE_PATH}
    COMMENT "Flashing Softdevice"
    )

SET(S_PARAM --application-version 1 --bootloader-version 1 --bl-settings-version 1)
ADD_CUSTOM_TARGET(settings
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    COMMAND ${NRFUTIL} settings generate --family ${TARGET_PLATFORM} --application ${CMAKE_PROJECT_NAME}.hex ${S_PARAM} ${SETTINGS_HEX}  	 
    COMMENT "Generate bootloader settings"
    )

# Derict FW flashing
ADD_CUSTOM_TARGET(flash
	DEPENDS ${CMAKE_PROJECT_NAME}.elf
    COMMAND ${NRFJPROG} -f ${TARGET_PLATFORM} --program ${CMAKE_PROJECT_NAME}.hex --sectoranduicrerase
    COMMAND ${NRFJPROG} -f ${TARGET_PLATFORM} -r
    COMMENT "Flashing program"
    )
